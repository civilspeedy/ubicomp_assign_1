import React, { useEffect, useState } from "react";
import { View } from "react-native";
import { GestureHandlerRootView, ScrollView } from "react-native-gesture-handler";
import { coreStyles } from "../styles/styles";
import Trail from "./subPages/Trail";
import Filters from "./subPages/Filters";
import { StyleSheet } from "react-native";
import Search from "./subPages/Search";

const trailList = require("../json/trail_data.json"); //dummy data generated by chatGPT

export default function AllTrails() {
  const [filters, setFilters] = useState({
    maxDistanceFromUser: 10,
    maxDistance: 10,
    hard: true,
    medium: true,
    easy: true,
  });

  const [filteredList, setFilteredList] = useState([]);

  const updateFilters = (newFilters) => {
    setFilters(newFilters);
    applyFilters();
  };

  const applyFilters = () => {
    const newFilteredList = [];
    for (let i = 0; i < trailList.length; i++) {
      if (
        trailList[i].distanceFromUser <= filters.maxDistanceFromUser &&
        trailList[i].distance <= filters.maxDistance
      ) {
        if (filters.easy && trailList[i].difficulty === 'E') {
          newFilteredList.push(trailList[i]);
        }
        if (filters.medium && trailList[i].difficulty === 'M') {
          newFilteredList.push(trailList[i]);
        }
        if (filters.hard && trailList[i].difficulty === 'H') {
          newFilteredList.push(trailList[i]);
        }
      }
    }
    setFilteredList(newFilteredList);
  };

  useEffect(() => {
    applyFilters();
  }, [filters]);

  return (
    <GestureHandlerRootView style={coreStyles.gestureHandlerRootView}>
      <ScrollView>
        {filteredList.map((trail, index) => (
          <Trail key={index} trail={trail} />
        ))}
      </ScrollView>
      <View style={allTrailsStyles.bottomRow}>
        <Filters update={updateFilters} />
        <Search />
      </View>
    </GestureHandlerRootView>
  );
}



const allTrailsStyles = StyleSheet.create({
  homeTop: {
    flex: 0.09,
    margin: 10,
  },

  trailList: {
    flex: 0.91,
    borderRadius: 10,
  },
  bottomRow: {
    flexDirection: 'row',
    justifyContent: 'center',
    padding: 10,
  },
});